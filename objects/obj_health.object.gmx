<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_health</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_gui</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Init

// Handles the displaying of the health HUD
image_speed = 0;

// Initialize the health
health = 100;

// The player can heal himself by clicking on EDE
autoHealing = false;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>301</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_alarm</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>room_speed</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Auto-Heal tick alarm : each time this alarn reach 0, EDE heals itself</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>301</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_alarm</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>room_speed</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Auto heal
if health &lt; 100 {
    // display autoHeal tick effect
    part_particles_create(obj_player.systemCentered,0,0,obj_player.particleAutoHeal,1);        
    
    health += 10;
    if health &gt; 100 {
        health = 100;
        autoHealing = false;
    }
    event_user(0); 
    
    // Decrease the score when healed, best player should never get hurt
    score -= BONUS_SCORE;    
    if (score &lt; 0){
        score = 0;
    }
    with(obj_score){            
        event_user(2);
    }

} else {
    // Deactivate auto-healing
    autoHealing = false;    
    event_user(4);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="14">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Auto-healing changed event</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Handle auto-healing

if (autoHealing = true){
    // Display particles
    part_emitter_stream(obj_player.systemCentered,obj_player.emitterHealthBonus,obj_player.particleHealthBonus,-4);
    alarm[0] = room_speed;
} else {
    // Stop healing effect particles
    part_emitter_clear(obj_player.systemCentered,obj_player.emitterHealthBonus);
    alarm[0] = -1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Health changed event</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Destroy EDE if no more life + display smoke

// If there is no more health, destroy EDE
if health = 0 {
    // Decrese lives
    lives -= 1;
    
    // Remove the player object
    var playerX;
    var playerY;
    with (obj_player){
        playerX = phy_position_x;
        playerY = phy_position_y;
        instance_destroy();
    }
    
    // Create explosion animation
    // The obj_player_explode will create a new obj_player when done
    instance_create(playerX,playerY,obj_playerExplode);
    exit;
}

// Otherwize we may display some smoke effect
var smoke; 
var sizeFrom;
var sizeTo; 
var lifespan;
var rate;

if health &gt;= 100 {
    image_index = 0;
    smoke = false;
} else if health &gt; 85 {
    image_index = 0;
    smoke = true;
    sizeFrom = 0;
    sizeTo = 0.2;
    lifespan = 5;
    rate = -3;
} else if  health &gt; 60  {
    image_index = 1;
    smoke = true;
    sizeFrom = 0.1;
    sizeTo = 0.3;
    lifespan = 15;
    rate = -2;
} else if  health &gt; 45 {
    image_index = 2;
    smoke = true;
    sizeFrom = 0.2;
    sizeTo = 0.4;
    lifespan = 25;
    rate = 1;
} else if  health &gt; 20 {
    image_index = 3;
    smoke = true;
    sizeFrom = 0.3;
    sizeTo = 0.5;
    lifespan = 35;
    rate = 1;
} else if  health &gt; 10 {
    image_index = 4;
    smoke = true;
    sizeFrom = 0.3;
    sizeTo = 0.6;
    lifespan = 40;
    rate = 1;
} else {
    image_index = 5;
    smoke = true;
    sizeFrom = 0.3;
    sizeTo = 0.7;
    lifespan = 45;
    rate = 1;
}

     
// Display smoke particles when hit
if smoke {

    
    var color; color =  health / 100 * 255;
    var colorTo; colorTo = make_color_rgb(color,color,color);
    color = health / 100 * 150;
    var colorFrom; colorFrom = make_color_rgb(color,color,color);

    part_type_color3(obj_player.particleSmoke,colorFrom,colorTo,colorTo);
    part_type_size(obj_player.particleSmoke,sizeFrom,sizeTo,0.05,false);
    part_type_life(obj_player.particleSmoke,lifespan,lifespan+room_speed);
    part_emitter_stream(obj_player.system,obj_player.emitterSmoke,obj_player.particleSmoke,rate);
}else {
    part_emitter_clear(obj_player.system,obj_player.emitterSmoke);
}



</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>32,32</point>
    <point>32,16</point>
  </PhysicsShapePoints>
</object>
